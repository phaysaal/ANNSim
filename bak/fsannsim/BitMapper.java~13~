/*
 * BitMapper.java
 *
 * Created on June 5, 2006, 12:27 PM
 */

package fsannsim;

import java.awt.Color;
import java.awt.Graphics;
import java.io.File;
import java.io.RandomAccessFile;

import javax.swing.JOptionPane;

/**
 *
 * @author  Mahmud
 */
public class BitMapper extends javax.swing.JInternalFrame {
    int x;
    int y;
    int w;
    int h;
    int s;
    boolean flag[][];
    private javax.swing.JFileChooser jfc = null;
    private File selectedFile;
    /** Creates new form BitMapper */
    public BitMapper() {
        super("Input Pattern Generator",true,true,true,true);
        x = 150;
        y = 200;
        w = 6;
        h = 6;
        s = 20;
        //
        flag = new boolean[h][w];
        initComponents();
        txtW.setText(w+"");
        txtH.setText(h+"");
        txtS.setText(s+"");
        setVisible(true);
        try {
            jbInit();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        txtW = new javax.swing.JTextField();
        txtH = new javax.swing.JTextField();
        txtS = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnRestart = new javax.swing.JButton();
        btnResize = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtCodes = new javax.swing.JTextArea();
        btnGenerate = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        txtFile = new javax.swing.JTextField();
        btnBrowse = new javax.swing.JButton();
        txtOutput = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        getContentPane().add(txtW);
        txtW.setBounds(60, 30, 60, 20);

        txtH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHActionPerformed(evt);
            }
        });

        getContentPane().add(txtH);
        txtH.setBounds(60, 60, 60, 20);

        getContentPane().add(txtS);
        txtS.setBounds(60, 140, 60, 20);

        jLabel1.setText("Width:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 30, 40, 20);

        jLabel2.setText("Height:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 60, 40, 20);

        jLabel3.setText("Size:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(20, 140, 40, 20);

        btnRestart.setText("Re Grid");
        btnRestart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestartActionPerformed(evt);
            }
        });

        getContentPane().add(btnRestart);
        btnRestart.setBounds(20, 100, 100, 23);

        btnResize.setText("Resize");
        btnResize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResizeActionPerformed(evt);
            }
        });

        getContentPane().add(btnResize);
        btnResize.setBounds(20, 170, 100, 23);

        jScrollPane1.setViewportView(txtCodes);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(140, 52, 410, 30);

        btnGenerate.setText("Generate");
        btnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateActionPerformed(evt);
            }
        });

        getContentPane().add(btnGenerate);
        btnGenerate.setBounds(20, 210, 100, 23);

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        getContentPane().add(btnClear);
        btnClear.setBounds(20, 250, 100, 23);

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        getContentPane().add(btnSave);
        btnSave.setBounds(570, 100, 70, 23);

        getContentPane().add(txtFile);
        txtFile.setBounds(140, 100, 340, 20);

        btnBrowse.setText("File");
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        getContentPane().add(btnBrowse);
        btnBrowse.setBounds(480, 100, 70, 23);

        getContentPane().add(txtOutput);
        txtOutput.setBounds(570, 60, 70, 20);

        jLabel4.setText("Codes for Input Layers :");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(140, 30, 230, 15);

        jLabel5.setText("Output :");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(570, 30, 70, 15);

        jLabel6.setText("Click to Select/Unselect Cells:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(140, 140, 250, 15);

        setBounds(0, 0, 711, 574);
    }
    // </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try{
            if(selectedFile != null){
                RandomAccessFile raf = new RandomAccessFile(selectedFile, "rws");
                //raf.readLine()
                if(txtCodes.getText() != "" && txtOutput.getText() != "" ){
                    boolean isExists = false;
                    String line = raf.readLine();
                    while(line != null){
                        if(line.trim().equals(txtCodes.getText().trim()))
                            isExists = true;
                        line = raf.readLine();
                        line = raf.readLine();
                    }

                    if(!isExists){
                        String data = txtCodes.getText() + "\n" + txtOutput.getText() + "\n";
                        //if(JOptionPane.showConfirmDialog(this,data) == JOptionPane.OK_OPTION){
                        raf.seek(raf.length());
                        raf.write(data.getBytes());
                        JOptionPane.showMessageDialog(this, "Successfully Added");
                    }else{
                        JOptionPane.showMessageDialog(this, "Pattern already exists");
                    }
                    //}
                }
                else{
                    JOptionPane.showMessageDialog(this,"Mistake: Your input or output code is empty");
                }

                raf.close();
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,e);
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        if(jfc == null)
            jfc = new javax.swing.JFileChooser();
        if(jfc.showSaveDialog(this) == jfc.APPROVE_OPTION){
            selectedFile = jfc.getSelectedFile();
            txtFile.setText(selectedFile.getName());
        }

    }//GEN-LAST:event_btnBrowseActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        int i,j;
        for(i=0; i<h; i++)
            for(j=0; j<w; j++)
                flag[i][j] = false;
        repaint();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateActionPerformed
        String str = "";
        int i,j;

        for(i=0; i<h; i++){
            for(j=0; j<w; j++){
                if(flag[i][j])
                    str += "1"+Main.inputSeperator;
                else
                    str += "0"+Main.inputSeperator;
            }
        }
        txtCodes.setText(str);
    }//GEN-LAST:event_btnGenerateActionPerformed

    private void btnResizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResizeActionPerformed
        s = Integer.parseInt(txtS.getText());
        repaint();
    }//GEN-LAST:event_btnResizeActionPerformed

    private void btnRestartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestartActionPerformed
        w = Integer.parseInt(txtW.getText());
        h = Integer.parseInt(txtH.getText());

        flag = null;
        flag = new boolean[h][w];
        repaint();
    }//GEN-LAST:event_btnRestartActionPerformed

    private void txtHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_txtHActionPerformed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        int xPos;
        int yPos;
        if(evt.getX() > x && evt.getX() < (x + w * s )){
            if(evt.getY() > y && evt.getY() < (y + h * s)){
                xPos = (int)((evt.getX() - x) / s);
                yPos = (int)((evt.getY() - y) / s);;
                flag[yPos][xPos] = !flag[yPos][xPos];
                repaint();
            }
        }

    }//GEN-LAST:event_formMouseReleased

    /**
     * @param args the command line arguments
     */
    public void paint(Graphics g){
        super.paint(g);
        int i,j;
        g.setColor(new Color(0xFF00FF));
        for(i=0; i<h; i++){
            for(j=0; j<w; j++){
                if(flag[i][j]){
                    g.setColor(new Color(0xFF00FF));
                    g.fillRect(x + j * s, y + i * s, s, s);
                }
                else{
                    g.setColor(new Color(0xDDDDDD));
                    g.drawRect(x + j * s, y + i * s, s, s);
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnGenerate;
    private javax.swing.JButton btnResize;
    private javax.swing.JButton btnRestart;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtCodes;
    private javax.swing.JTextField txtFile;
    private javax.swing.JTextField txtH;
    private javax.swing.JTextField txtOutput;
    private javax.swing.JTextField txtS;
    private javax.swing.JTextField txtW;
    private void jbInit() throws Exception {
        this.getContentPane().setLayout(null);
    }
    // End of variables declaration//GEN-END:variables

}
